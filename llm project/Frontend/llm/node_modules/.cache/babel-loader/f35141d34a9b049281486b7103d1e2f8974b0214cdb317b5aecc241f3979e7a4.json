{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\llm project\\\\Frontend\\\\llm\\\\src\\\\modules\\\\textbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TextField from '@mui/material/TextField';\nimport SendIcon from '@mui/icons-material/Send';\nimport './textbox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyTextBox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [inputValue, setInputValue] = useState('');\n  const handleMessageSend = () => {\n    if (inputValue.trim() !== '') {\n      setMessages([...messages, {\n        text: inputValue,\n        sender: 'user'\n      }]);\n      setInputValue('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"textbox-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender}`,\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      className: \"box\",\n      multiline: true,\n      label: \"Enter Text\",\n      value: inputValue,\n      onChange: e => setInputValue(e.target.value),\n      InputProps: {\n        style: {\n          color: 'white',\n          width: '80%',\n          border: '2px solid white',\n          borderRadius: '8px',\n          padding: '8px'\n        },\n        endAdornment: /*#__PURE__*/_jsxDEV(SendIcon, {\n          style: {\n            cursor: 'pointer',\n            color: 'white'\n          },\n          onClick: handleMessageSend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(MyTextBox, \"slbeoFq67b53BRRhfk6DiRI5k0A=\");\n_c = MyTextBox;\nexport default MyTextBox;\nvar _c;\n$RefreshReg$(_c, \"MyTextBox\");","map":{"version":3,"names":["React","useState","TextField","SendIcon","jsxDEV","_jsxDEV","MyTextBox","_s","messages","setMessages","inputValue","setInputValue","handleMessageSend","trim","text","sender","className","children","map","message","index","fileName","_jsxFileName","lineNumber","columnNumber","multiline","label","value","onChange","e","target","InputProps","style","color","width","border","borderRadius","padding","endAdornment","cursor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/Desktop/llm project/Frontend/llm/src/modules/textbox.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport './textbox.css';\r\n\r\nconst MyTextBox = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleMessageSend = () => {\r\n    if (inputValue.trim() !== '') {\r\n      setMessages([\r\n        ...messages,\r\n        {\r\n          text: inputValue,\r\n          sender: 'user',\r\n        },\r\n      ]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className='textbox-container'>\r\n      <div className=\"chat-messages\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className={`message ${message.sender}`}>\r\n            {message.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <TextField\r\n        className='box'\r\n        multiline\r\n        label=\"Enter Text\"\r\n        value={inputValue}\r\n        onChange={(e) => setInputValue(e.target.value)}\r\n        InputProps={{\r\n          style: {\r\n            color: 'white',\r\n            width: '80%',\r\n            border: '2px solid white',\r\n            borderRadius: '8px',\r\n            padding: '8px',\r\n          },\r\n          endAdornment: (\r\n            <SendIcon\r\n              style={{\r\n                cursor: 'pointer',\r\n                color: 'white',\r\n              }}\r\n              onClick={handleMessageSend}\r\n            />\r\n          ),\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyTextBox;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,IAAIF,UAAU,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC5BJ,WAAW,CAAC,CACV,GAAGD,QAAQ,EACX;QACEM,IAAI,EAAEJ,UAAU;QAChBK,MAAM,EAAE;MACV,CAAC,CACF,CAAC;MACFJ,aAAa,CAAC,EAAE,CAAC;IACnB;EACF,CAAC;EAED,oBACEN,OAAA;IAAKW,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCZ,OAAA;MAAKW,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BT,QAAQ,CAACU,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC3Bf,OAAA;QAAiBW,SAAS,EAAG,WAAUG,OAAO,CAACJ,MAAO,EAAE;QAAAE,QAAA,EACrDE,OAAO,CAACL;MAAI,GADLM,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNnB,OAAA,CAACH,SAAS;MACRc,SAAS,EAAC,KAAK;MACfS,SAAS;MACTC,KAAK,EAAC,YAAY;MAClBC,KAAK,EAAEjB,UAAW;MAClBkB,QAAQ,EAAGC,CAAC,IAAKlB,aAAa,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC/CI,UAAU,EAAE;QACVC,KAAK,EAAE;UACLC,KAAK,EAAE,OAAO;UACdC,KAAK,EAAE,KAAK;UACZC,MAAM,EAAE,iBAAiB;UACzBC,YAAY,EAAE,KAAK;UACnBC,OAAO,EAAE;QACX,CAAC;QACDC,YAAY,eACVjC,OAAA,CAACF,QAAQ;UACP6B,KAAK,EAAE;YACLO,MAAM,EAAE,SAAS;YACjBN,KAAK,EAAE;UACT,CAAE;UACFO,OAAO,EAAE5B;QAAkB;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B;MAEL;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACjB,EAAA,CArDID,SAAS;AAAAmC,EAAA,GAATnC,SAAS;AAuDf,eAAeA,SAAS;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}