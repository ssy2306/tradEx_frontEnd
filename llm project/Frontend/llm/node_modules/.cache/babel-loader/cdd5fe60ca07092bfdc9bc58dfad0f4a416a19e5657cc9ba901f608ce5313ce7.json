{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\llm project\\\\Frontend\\\\llm\\\\src\\\\modules\\\\textbox.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, IconButton } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport MessageBubble from './MessageBubble';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBox = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messageText, setMessageText] = useState('');\n  const sendMessage = () => {\n    if (messageText.trim() !== '') {\n      setMessages([...messages, {\n        text: messageText,\n        sender: 'user'\n      }]);\n      setMessageText('');\n      // Simulate chatbot response (replace with actual response logic)\n      setTimeout(() => {\n        setMessages([...messages, {\n          text: 'Sample response from chatbot',\n          sender: 'chatbot'\n        }]);\n      }, 500);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: 'fixed',\n      bottom: '20px',\n      // Adjust position from bottom as needed\n      width: '50%',\n      // Adjust width of the chatbox\n      left: '350px' // Adjust the left position if needed\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        flexDirection: 'column',\n        borderRadius: '10px',\n        backgroundColor: '#f0f0f0',\n        color: 'black',\n        border: '2px solid #ccc',\n        padding: '10px',\n        minHeight: '200px',\n        maxHeight: '400px',\n        overflowY: 'auto'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(MessageBubble, {\n        message: msg.text,\n        sender: msg.sender\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        alignItems: 'center',\n        marginTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Type your message\",\n        variant: \"standard\",\n        size: \"small\",\n        fullWidth: true,\n        sx: {\n          borderRadius: '10px',\n          flexGrow: 1\n        },\n        value: messageText,\n        onChange: e => setMessageText(e.target.value),\n        onKeyPress: e => {\n          if (e.key === 'Enter') {\n            sendMessage();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"primary\",\n        \"aria-label\": \"send message\",\n        onClick: sendMessage,\n        sx: {\n          marginLeft: '5px'\n        },\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBox, \"dZlRd8GYMDT7JMGj796bgUzzTWc=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useState","Box","TextField","IconButton","SendIcon","MessageBubble","jsxDEV","_jsxDEV","ChatBox","_s","messages","setMessages","messageText","setMessageText","sendMessage","trim","text","sender","setTimeout","sx","position","bottom","width","left","children","display","flexDirection","borderRadius","backgroundColor","color","border","padding","minHeight","maxHeight","overflowY","map","msg","index","message","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","marginTop","placeholder","variant","size","fullWidth","flexGrow","value","onChange","e","target","onKeyPress","key","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/Users/KIIT/Desktop/llm project/Frontend/llm/src/modules/textbox.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, TextField, IconButton } from '@mui/material';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport MessageBubble from './MessageBubble';\r\n\r\nconst ChatBox = () => {\r\n  const [messages, setMessages] = useState([]);\r\n  const [messageText, setMessageText] = useState('');\r\n\r\n  const sendMessage = () => {\r\n    if (messageText.trim() !== '') {\r\n      setMessages([...messages, { text: messageText, sender: 'user' }]);\r\n      setMessageText('');\r\n      // Simulate chatbot response (replace with actual response logic)\r\n      setTimeout(() => {\r\n        setMessages([...messages, { text: 'Sample response from chatbot', sender: 'chatbot' }]);\r\n      }, 500);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: 'fixed',\r\n        bottom: '20px', // Adjust position from bottom as needed\r\n        width: '50%', // Adjust width of the chatbox\r\n        left: '350px', // Adjust the left position if needed\r\n      }}\r\n    >\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          borderRadius: '10px',\r\n          backgroundColor: '#f0f0f0',\r\n          color: 'black',\r\n          border: '2px solid #ccc',\r\n          padding: '10px',\r\n          minHeight: '200px',\r\n          maxHeight: '400px',\r\n          overflowY: 'auto',\r\n        }}\r\n      >\r\n        {messages.map((msg, index) => (\r\n          <MessageBubble key={index} message={msg.text} sender={msg.sender} />\r\n        ))}\r\n      </Box>\r\n      <Box\r\n        sx={{\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          marginTop: '10px',\r\n        }}\r\n      >\r\n        <TextField\r\n          placeholder=\"Type your message\"\r\n          variant=\"standard\"\r\n          size=\"small\"\r\n          fullWidth\r\n          sx={{\r\n            borderRadius: '10px',\r\n            flexGrow: 1,\r\n          }}\r\n          value={messageText}\r\n          onChange={(e) => setMessageText(e.target.value)}\r\n          onKeyPress={(e) => {\r\n            if (e.key === 'Enter') {\r\n              sendMessage();\r\n            }\r\n          }}\r\n        />\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label=\"send message\"\r\n          onClick={sendMessage}\r\n          sx={{ marginLeft: '5px' }}\r\n        >\r\n          <SendIcon />\r\n        </IconButton>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ChatBox;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}